# Generated by Django 4.2.3 on 2023-09-22 19:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SensorDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('active', models.BooleanField(default=False)),
                ('access_token', models.CharField(max_length=50, null=True)),
                ('allow_group_admins_to_edit', models.BooleanField(default=False)),
                ('active_alerts', models.BooleanField(default=False)),
                ('favorite', models.BooleanField(default=False)),
                ('user_id_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TemperatureHumiditySensorDetails',
            fields=[
                ('sensordetails_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='th_sens.sensordetails')),
                ('high_temp_alert', models.FloatField(null=True)),
                ('low_temp_alert', models.FloatField(null=True)),
                ('high_humidity_alert', models.FloatField(null=True)),
                ('low_humidity_alert', models.FloatField(null=True)),
            ],
            bases=('th_sens.sensordetails',),
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('humidity', models.FloatField()),
                ('date_time', models.DateTimeField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('sensor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='th_sens.sensordetails')),
            ],
        ),
    ]
